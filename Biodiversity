library(RStoolbox)
library(raster)
library(rasterdiv)
library(sp)
library(terra)
library(exactextractr)

#INITIALIZING CIRCLES
#Importing the areas where I want to calculate the pc
cricles <- shapefile('C:/Users/carlo/Desktop/tesi/biodiversity/cerchi/circles.shp')

# Removing points that are not in forests or for which we don't have data
values_to_remove <- c("GS0004", "GS0005", "GS0006", "GS0007", "GS0008", 
                      "GS0016", "GS0017", "GS0018", "GS0019", 
                      "GS0020",  "GS0021", "GS0022", "GS0029")

# Filter the shapefile to exclude these values
circles_filtered <- circles[!(circles@data[["PUNTO"]] %in% values_to_remove), ]

# Convert SpatialPolygonsDataFrame to SpatVector 
circles_vect <- vect(circles_filtered)

# Initialize a list to store the centroids
centroids_list <- list() 

species_richness <- c(2,2,3,4,2,3,2,4,3,4,5,3,2, 4,3,4,3,2)
shannon_indices <- c(0.487,0.181,0.556,1.22,0.362,0.66,0.358,1.35,0.381,0.238,1.15,0.83,0.377,0.734,0.958,0.988,0.271,0.554)



#CALCULATING RAO INDEX ON SENTINEL10M NDVI
#here all the circles are in Sentinel_sx, except for circles GS0020 and GS0022 that are on sentinel_dx. But here we don't need these two
b8 <- stack("C:/Users/carlo/Desktop/tesi/alto_adige/sentinel2/sentinel_sx/GRANULE/L2A_T32TPS_A042919_20230910T101420/IMG_DATA/R10m/T32TPS_20230910T100601_B08_10m.jp2")
b8 <-crop(b8_sx, extent(cropped_area))
b4 <-  stack("C:/Users/carlo/Desktop/tesi/alto_adige/sentinel2/sentinel_sx/GRANULE/L2A_T32TPS_A042919_20230910T101420/IMG_DATA/R10m/T32TPS_20230910T100601_B04_10m.jp2")
b4 <-crop(b4_sx, extent(cropped_area))

ndvi <-(b8-b4)/(b8+b4)

sentinel_rao_indices <- numeric(length(circles_vect))

# Iterate over each circle 
for (i in seq_along(circles_filtered)) {
 # Extract the polygon representing the current circle
  circle_polygon <- circles_filtered[i, ]

  # Calculate centroid of the circle
  centroid <- centroids(circles_vect[i])
  centroids_list[[i]] <- centroid

  # Calculate Rao index for the current circle
  # Crop and mask the raster with the polygon
  extracted_values <- exact_extract(ndvi, circle_polygon, fun = NULL)

  #masked_raster <- crop(ndvi_sx, circle_polygon)
  mat_s <- unlist(lapply(extracted_values, function(x) x$value))
  mat_s <- mat_s[!is.na(mat_s)]

  # Rao index calculation
  n_s <- length(mat_s)
  n2_s <- n_s^2
  distm_s <- as.matrix(dist(mat_s))
  rao_index <- sum(distm_s) / n2_s

  # Store the Rao index in the vector
  sentinel_rao_indices[i] <- rao_index
} 

# Create a combined data frame with centroids, Rao indices, Shannon indices, and number of trees
biodiversity_sentinel <- data.frame(Longitude = centroids_df$Longitude, 
                         Latitude = centroids_df$Latitude, 
                         Rao_Index = sentinel_rao_indices, 
                         Shannon_Index = shannon_indices, 
                         Species_Richness = species_richness)
# Save as CSV file
write.csv(biodiversity_sentinel, file = "C:/Users/carlo/Desktop/tesi/biodiversity/risultati/Biodiversity_Sentinel.csv", row.names = FALSE)

plot(biodiversity_sentinel$Rao_Index, biodiversity_sentinel$Shannon_Index, xlab = "Rao Index", ylab = "Shannon Index",
     main = "Sentinel Rao Index vs Shannon Index" )
plot(biodiversity_sentinel$Rao_Index, biodiversity_sentinel$Species_Richness, xlab = "Rao Index", ylab = "Species Richness",
     main = "Sentinel Rao Index vs Species Richness" )


#CALCULATING RAO INDEX ON ENMAP'S PC1
#importing Enmap image
suppressWarnings({
rst_lst <- stack('C:/Users/carlo/Desktop/tesi/alto_adige/enmap/dataset/ENMAP01/ENMAP01-____L2A-DT0000041009_20230909T102950Z_001_V010303_20230910T054452Z-SPECTRAL_IMAGE.TIF')
})
cropped_area <-shapefile('C:/Users/carlo/Desktop/tesi/biodiversity/crop.shp')
enmap <-crop(rst_lst, extent(cropped_area))

names(enmap) <- as.character(1:224)

#dropping the layers with missing values and anomalous behaviour
enmap <- dropLayer(enmap, paste0("X", c(131:135, 80:102)))

#Transforming into a brick since we have many layers
enmap <- brick(enmap)

# Define a function to standardize a single layer
standardize_layer <- function(layer) {
  values <- getValues(layer)
  standardized_values <- scale(values, center = TRUE, scale = TRUE)
  setValues(layer, standardized_values)
}

# Standardize each layer in the raster stack
standardized_layers <- stack(lapply(1:nlayers(enmap), function(i) standardize_layer(enmap[[i]])))

#performing the PCA
enmap_pca <- rasterPCA(standardized_layers)

#Plot the map of the first principal component (PC1)
plot(enmap_pca$map[[1]], main = "PC1")

#Calculating Rao index on the PC1
PC1_raster_layer <- enmap_pca$map[[1]] 

# Initialize a vector to store Rao indices for each circle
enmap_rao_indices <- numeric(length(circles_vect))

# Iterate over each circle
for (i in seq_along(circles_filtered)) {
  # Extract the polygon representing the current circle
  circle_polygon <- circles_filtered[i,]

  # Calculate centroid of the circle
  centroid <- centroids(circles_vect[i])
  centroids_list[[i]] <- centroid

  # Use exact_extract to get the values of PC1_raster_layer within the circle polygon
  extracted_values <- exact_extract(PC1_raster_layer, circle_polygon)

  mat_s <- unlist(lapply(extracted_values, function(x) x$value))
  mat_s <- mat_s[!is.na(mat_s)]

  # Rao index calculation
  n_s <- length(mat_s)
  n2_s <- n_s^2
  distm_s <- as.matrix(dist(mat_s))
  rao_index <- sum(distm_s) / n2_s

  # Store the Rao index in the vector
  enmap_rao_indices[i] <- rao_index
}

# Combine centroids into a data frame
centroids_df <- do.call(rbind, lapply(centroids_list, function(x) cbind(x[,1], x[,2])))
centroids_df <- as.data.frame(centroids_df)
colnames(centroids_df) <- c("Longitude", "Latitude")

# Create a combined data frame with centroids, Rao indices, Shannon indices, and number of trees
biodiversity_enmap <- data.frame(Longitude = centroids_df$Longitude, 
                         Latitude = centroids_df$Latitude, 
                         Rao_Index = enmap_rao_indices, 
                         Shannon_Index = shannon_indices, 
                         Species_Richness = species_richness)
# Save as CSV file
write.csv(biodiversity_enmap, file = "C:/Users/carlo/Desktop/tesi/biodiversity/risultati/Biodiversity_Enmap.csv", row.names = FALSE)

dev.off()
plot(biodiversity_enmap$Rao_Index, biodiversity_enmap$Shannon_Index, xlab = "Rao Index", ylab = "Shannon Index",
     main = "EnMAP Rao Index vs Shannon Index" )
plot(biodiversity_enmap$Rao_Index, biodiversity_enmap$Species_Richness, xlab = "Rao Index", ylab = "Species Richness",
     main = "EnMAP Rao Index vs Species Richness" )


#CALCULATING RAO INDEX ON ENMAP OPTICAL TRAITS
#importing Enmap image
rst_lst <- rast("C:/Users/carlo/Desktop/tesi/biodiversity/optical_signals/enmap_output_LUT_gaussian.bsq")
cropped_area <-shapefile('C:/Users/carlo/Desktop/tesi/biodiversity/crop.shp')
opt_traits <-crop(rst_lst, extent(cropped_area))

#Transforming into a brick since we have many layers
opt_traits <- brick(opt_traits)


#Initialize the vector where I will store the Rao indices for each layer
rao_indices <- numeric(length(circles_vect))

for (k in opt_traits@data@names){
# Initialize a vector to store Rao indices for each optical trait
vector_rao_name <- paste0("rao_index_", k)

# Iterate over each circle
for (i in seq_along(circles_filtered)) {
  # Extract the polygon representing the current circle
  circle_polygon <- circles_filtered[i,]

  # Calculate centroid of the circle
  centroid <- centroids(circles_vect[i])
  centroids_list[[i]] <- centroid

  # Use exact_extract to get the values of the layer within the circle polygon
  extracted_values <- exact_extract(opt_traits[[k]], circle_polygon)

  mat_s <- unlist(lapply(extracted_values, function(x) x$value))
  mat_s <- mat_s[!is.na(mat_s)]

  # Rao index calculation
  n_s <- length(mat_s)
  n2_s <- n_s^2
  distm_s <- as.matrix(dist(mat_s))
  rao_index <- sum(distm_s) / n2_s

  # Store the Rao index in the vector
  enmap_rao_indices[i] <- rao_index
}
assign(vector_rao_name, enmap_rao_indices)

cat(vector_rao_name, "vector created\n")
}

# Combine centroids into a data frame
centroids_df <- do.call(rbind, lapply(centroids_list, function(x) cbind(x[,1], x[,2])))
centroids_df <- as.data.frame(centroids_df)
colnames(centroids_df) <- c("Longitude", "Latitude")

# Create a combined data frame with centroids, Rao indices (only keeping the ones that are statistically significant), Shannon indices, and number of trees
biodiversity_enmap_opt_traits <- data.frame(Longitude = centroids_df$Longitude, 
                         Latitude = centroids_df$Latitude, rao_index_car=rao_index_car, rao_index_anth = rao_index_anth,
                         rao_index_N = rao_index_N, rao_index_cab=rao_index_cab, rao_index_cbrown=rao_index_cbrown, 
                         rao_index_cm=rao_index_cm, rao_index_LAI=rao_index_LAI, rao_index_cw=rao_index_cw,
                         rao_index_LIDF=rao_index_LIDF, rao_index_hspot=rao_index_hspot,
                         Shannon_Index = shannon_indices, 
                         Species_Richness = species_richness)
# Save as CSV file
write.csv(biodiversity_enmap_opt_traits, file = "C:/Users/carlo/Desktop/tesi/biodiversity/risultati/Biodiversity_Enmap_Opt_Traits_Gaus.csv", row.names = FALSE)

#Calculating the R^2 value 
for (k in 3:12){
# Calculate R^2 between Shannon Index and Rao Index
lm_shannon <- lm(biodiversity_enmap_opt_traits[[13]] ~ biodiversity_enmap_opt_traits[[k]])
r2_shannon <- summary(lm_shannon)$r.squared
R2_shannonVSrao_name <- paste0("R2_Shannon_VS_", colnames(biodiversity_enmap_opt_traits)[k])
assign(R2_shannonVSrao_name, r2_shannon)

# Calculate R^2 Species Richness and Rao Index
lm_species <- lm(biodiversity_enmap_opt_traits[[14]] ~ biodiversity_enmap_opt_traits[[k]])
r2_species <- summary(lm_species)$r.squared
R2_speciesVSrao_name <- paste0("R2_Species_VS_", colnames(biodiversity_enmap_opt_traits)[k])
assign(R2_speciesVSrao_name, r2_species)
}


dev.off()
par(mfrow=c(1,2))
plot(biodiversity_enmap_opt_traits$rao_index_anth, biodiversity_enmap_opt_traits$Shannon_Index, xlab = "Rao Index anth", ylab = "Shannon Index",
     main = "EnMAP Rao Index anth\n vs Shannon Index" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_anth), y = 0.9*max(biodiversity_enmap_opt_traits$Shannon_Index), 
     labels = paste("R^2 =", round(R2_Shannon_VS_rao_index_anth, 3)), 
     pos = 4)
plot(biodiversity_enmap_opt_traits$rao_index_anth, biodiversity_enmap_opt_traits$Species_Richness, xlab = "Rao Index anth", 
    ylab = "Species Richness",
     main = "EnMAP Rao Index anth\n vs Species Richness" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_anth), y = 0.9*max(biodiversity_enmap_opt_traits$Species_Richness), 
     labels = paste("R^2 =", round(R2_Species_VS_rao_index_anth, 3)), 
     pos = 4)


plot(biodiversity_enmap_opt_traits$rao_index_N, biodiversity_enmap_opt_traits$Shannon_Index, xlab = "Rao Index N", ylab = "Shannon Index",
     main = "EnMAP Rao Index N\n vs Shannon Index" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_N), y = 0.9*max(biodiversity_enmap_opt_traits$Shannon_Index), 
     labels = paste("R^2 =", round(R2_Shannon_VS_rao_index_N, 3)), 
     pos = 4)
plot(biodiversity_enmap_opt_traits$rao_index_N, biodiversity_enmap_opt_traits$Species_Richness, xlab = "Rao Index N", ylab = "Species Richness",
     main = "EnMAP Rao Index N\n vs Species Richness" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_N), y = 0.9*max(biodiversity_enmap_opt_traits$Species_Richness), 
     labels = paste("R^2 =", round(R2_Species_VS_rao_index_N, 3)), 
     pos = 4)


plot(biodiversity_enmap_opt_traits$rao_index_cab, biodiversity_enmap_opt_traits$Shannon_Index, xlab = "Rao Index cab", ylab = "Shannon Index",
     main = "EnMAP Rao Index cab\n vs Shannon Index" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_cab), y = 0.9*max(biodiversity_enmap_opt_traits$Shannon_Index), 
     labels = paste("R^2 =", round(R2_Shannon_VS_rao_index_cab, 3)), 
     pos = 4)
plot(biodiversity_enmap_opt_traits$rao_index_cab, biodiversity_enmap_opt_traits$Species_Richness, xlab = "Rao Index cab", ylab = "Species Richness",
     main = "EnMAP Rao Index cab\n vs Species Richness" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_cab), y = 0.9*max(biodiversity_enmap_opt_traits$Species_Richness), 
     labels = paste("R^2 =", round(R2_Species_VS_rao_index_cab, 3)), 
     pos = 4)


plot(biodiversity_enmap_opt_traits$rao_index_cbrown, biodiversity_enmap_opt_traits$Shannon_Index, xlab = "Rao Index cbrown", ylab = "Shannon Index",
     main = "EnMAP Rao Index cbrown\n vs Shannon Index" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_cbrown), y = 0.9*max(biodiversity_enmap_opt_traits$Shannon_Index), 
     labels = paste("R^2 =", round(R2_Shannon_VS_rao_index_cbrown, 3)), 
     pos = 4)
plot(biodiversity_enmap_opt_traits$rao_index_cbrown, biodiversity_enmap_opt_traits$Species_Richness, xlab = "Rao Index cbrown", ylab = "Species Richness",
     main = "EnMAP Rao Index cbrown\n vs Species Richness" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_cbrown), y = 0.9*max(biodiversity_enmap_opt_traits$Species_Richness), 
     labels = paste("R^2 =", round(R2_Species_VS_rao_index_cbrown, 3)), 
     pos = 4)


plot(biodiversity_enmap_opt_traits$rao_index_cm, biodiversity_enmap_opt_traits$Shannon_Index, xlab = "Rao Index cm", ylab = "Shannon Index",
     main = "EnMAP Rao Index cm\n vs Shannon Index" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_cm), y = 0.9*max(biodiversity_enmap_opt_traits$Shannon_Index), 
     labels = paste("R^2 =", round(R2_Shannon_VS_rao_index_cm, 3)), 
     pos = 4)
plot(biodiversity_enmap_opt_traits$rao_index_cm, biodiversity_enmap_opt_traits$Species_Richness, xlab = "Rao Index cm", ylab = "Species Richness",
     main = "EnMAP Rao Index cm\n vs Species Richness" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_cm), y = 0.9*max(biodiversity_enmap_opt_traits$Species_Richness), 
     labels = paste("R^2 =", round(R2_Species_VS_rao_index_cm, 3)), 
     pos = 4)


plot(biodiversity_enmap_opt_traits$rao_index_LAI, biodiversity_enmap_opt_traits$Shannon_Index, xlab = "Rao Index LAI", ylab = "Shannon Index",
     main = "EnMAP Rao Index LAI\n vs Shannon Index" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_LAI), y = 0.9*max(biodiversity_enmap_opt_traits$Shannon_Index), 
     labels = paste("R^2 =", round(R2_Shannon_VS_rao_index_LAI, 3)), 
     pos = 4)
plot(biodiversity_enmap_opt_traits$rao_index_LAI, biodiversity_enmap_opt_traits$Species_Richness, xlab = "Rao Index LAI", ylab = "Species Richness",
     main = "EnMAP Rao Index LAI\n vs Species Richness" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_LAI), y = 0.9*max(biodiversity_enmap_opt_traits$Species_Richness), 
     labels = paste("R^2 =", round(R2_Species_VS_rao_index_LAI, 3)), 
     pos = 4)


plot(biodiversity_enmap_opt_traits$rao_index_cw, biodiversity_enmap_opt_traits$Shannon_Index, xlab = "Rao Index cw", ylab = "Shannon Index",
     main = "EnMAP Rao Index cw\n vs Shannon Index" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_cw), y = 0.9*max(biodiversity_enmap_opt_traits$Shannon_Index), 
     labels = paste("R^2 =", round(R2_Shannon_VS_rao_index_cw, 3)), 
     pos = 4)
plot(biodiversity_enmap_opt_traits$rao_index_cw, biodiversity_enmap_opt_traits$Species_Richness, xlab = "Rao Index cw", ylab = "Species Richness",
     main = "EnMAP Rao Index cw\n vs Species Richness" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_cw), y = 0.9*max(biodiversity_enmap_opt_traits$Species_Richness), 
     labels = paste("R^2 =", round(R2_Species_VS_rao_index_cw, 3)), 
     pos = 4)


plot(biodiversity_enmap_opt_traits$rao_index_LIDF, biodiversity_enmap_opt_traits$Shannon_Index, xlab = "Rao Index LIDF", ylab = "Shannon Index",
     main = "EnMAP Rao Index LIDF\n vs Shannon Index" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_LIDF), y = 0.9*max(biodiversity_enmap_opt_traits$Shannon_Index), 
     labels = paste("R^2 =", round(R2_Shannon_VS_rao_index_LIDF, 3)), 
     pos = 4)
plot(biodiversity_enmap_opt_traits$rao_index_LIDF, biodiversity_enmap_opt_traits$Species_Richness, xlab = "Rao Index LIDF", ylab = "Species Richness",
     main = "EnMAP Rao Index LIDF\n vs Species Richness" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_LIDF), y = 0.9*max(biodiversity_enmap_opt_traits$Species_Richness), 
     labels = paste("R^2 =", round(R2_Species_VS_rao_index_LIDF, 3)), 
     pos = 4)

plot(biodiversity_enmap_opt_traits$rao_index_hspot, biodiversity_enmap_opt_traits$Shannon_Index, xlab = "Rao Index hspot", ylab = "Shannon Index",
     main = "EnMAP Rao Index hspot\n vs Shannon Index" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_hspot), y = 0.9*max(biodiversity_enmap_opt_traits$Shannon_Index), 
     labels = paste("R^2 =", round(R2_Shannon_VS_rao_index_hspot, 3)), 
     pos = 4)
plot(biodiversity_enmap_opt_traits$rao_index_hspot, biodiversity_enmap_opt_traits$Species_Richness, xlab = "Rao Index hspot", ylab = "Species Richness",
     main = "EnMAP Rao Index hspot\n vs Species Richness" )
text(x = 0.25*max(biodiversity_enmap_opt_traits$rao_index_hspot), y = 0.9*max(biodiversity_enmap_opt_traits$Species_Richness), 
     labels = paste("R^2 =", round(R2_Species_VS_rao_index_hspot, 3)), 
     pos = 4)
















