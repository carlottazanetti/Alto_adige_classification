library(RStoolbox)
library(raster)
library(rasterdiv)
library(sp)

#CALCULATING RAO INDEX ON ENMAP'S PC1
#importing Enmap image
rst_lst <- stack('C:/Users/carlo/Desktop/tesi/alto_adige/enmap/dataset/ENMAP01/ENMAP01-____L2A-DT0000041009_20230909T102950Z_001_V010303_20230910T054452Z-SPECTRAL_IMAGE.TIF')
cropped_area <-shapefile('C:/Users/carlo/Desktop/tesi/biodiversity/crop.shp')
enmap <-crop(rst_lst, extent(cropped_area))

names(enmap) <- as.character(1:224)

#dropping the layers with missing values
enmap <- dropLayer(enmap, c(131:135))

#Transforming into a brick since we have many layers
enmap <- brick(enmap)

#performing the PCA
enmap_pca <- rasterPCA(enmap)

#Plot the map of the first principal component (PC1)
plot(enmap_pca$map[[1]], main = "PC1")

#Calculating Rao index on the PC1
PC1_raster_layer <- enmap_pca$map[[1]] 
cricles <- shapefile('C:/Users/carlo/Desktop/tesi/biodiversity/cerchi/circles.shp')

# Initialize a vector to store Rao indices for each circle
enmap_rao_indices <- numeric(length(circles))

# Iterate over each circle
for (i in seq_along(circles)) {
  # Extract the polygon representing the current circle
  circle_polygon <- circles[i, ]
  
  # Calculate Rao index for the current circle
  rao_index <- mpaRaoAreaS(PC1_raster_layercircle_polygon)
  
  # Store the Rao index in the vector
  enmap_rao_indices[i] <- rao_index
}

# View the calculated Rao indices
print(enmap_rao_indices)

#CALCULATING RAO INDEX ON SENTINEL10M NDVI
#here all the circles are in Sentinelsx, except for circles with ID 23 and 22 that are on sentineldx








